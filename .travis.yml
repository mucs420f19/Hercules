dist: bionic
sudo: required
language:
  - cpp
python: "3.8"
addons:
  apt:
    sources:
    - llvm-toolchain-bionic-9
    - ubuntu-toolchain-r-test
    packages:
    - clang-7
    - cmake
    - gcc-8
    - g++-8
    - ninja-build
  homebrew:
    packages:
    - cmake
    - gcc@8
    - ninja

matrix:
  include:
    - os: linux
      compiler: g++
      env: PATH=$HOME/.local/bin:$PATH
      before_install:
        - pip install --user conan
        - pip install --user cpp-coveralls
      script:
        - cd build
        - cmake -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug ..
        - cmake --build .
        - ctest -C Debug --verbose
      after_success:
        - coveralls --root ../ --build-root ./ --exclude-pattern '.+/tests/' --exclude-pattern '.+/usr/' --exclude-pattern '.+/CMakeFiles/' --gcov /usr/bin/gcov --gcov-options '\--long-file-names --preserve-paths' --verbose;
    - os: linux
      compiler: clang
      env: PATH=$HOME/.local/bin:$PATH
      before_install:
        - pip install --user conan
    - os: osx
      compiler: clang
      env: PATH=$HOME/.local/bin:$PATH
      before_install:
        - pip install python
        - python -m pip install --upgrade pip
        - pip install conan
    - os: windows
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python -m pip install --upgrade pip
        - pip install conan
      install:
        - conan user
        - mkdir build
        - cd build
        - conan install .. -s arch=x86 -s compiler="Visual Studio" -s compiler.version=15 -s compiler.runtime=MD --build missing
        - cd ..

install:
  - conan user
  - mkdir build
  - cd build
  - conan install .. --build missing
  - cd ..

script:
  - cd build
  - cmake ..
  - cmake --build .
  - ctest -C Debug --verbose

notifications:
  email: false
